version: '2.2'

x-default-logging:
  &default-logging
  driver: json-file
  options:
    max-size: '5m'
    max-file: '2'

services:
  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-data:/data/db
    logging:
      driver: none
    ports:
      - 27017:27017
  rabbit:
    image: rabbitmq:3-management
    restart: always
    volumes:
      - rabbit-data:/var/lib/rabbitmq:cached
    logging:
      driver: none
    env_file:
      - .env.rabbit
    ports:
      - 8081:15672
  prometheus:
    image: just1ce/tasks_prometheus:v0.1.0
    container_name: prometheus
    build:
      context: .
      dockerfile: ./services/prometheus/Dockerfile
    volumes:
      - prometheus-data:/prometheus
    restart: always
    logging: *default-logging
    ports:
      - 9090:9090
  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:v0.15.2
    restart: always
    command: --path.procfs /host/proc --path.sysfs /host/sys --collector.filesystem.ignored-mount-points "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns)($$|/)"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    logging: *default-logging
  rabbit-exporter:
    container_name: rabbit-exporter
    image: kbudde/rabbitmq-exporter
    restart: always
    ports:
      - 9091:9090
    env_file:
      - .env.infra
      - .env.rabbit
  nginx-exporter:
    container_name: nginx-exporter
    image: sophos/nginx-vts-exporter
    restart: always
    env_file:
      - .env.infra
  mongodb-exporter:
    container_name: mongodb-exporter
    image: amazonaws/mongodb_exporter
    restart: always
    logging: *default-logging
    env_file:
      - .env.mongodb
  cadvisor:
    image: google/cadvisor:latest
    restart: always
    logging: *default-logging
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
  grafana:
    container_name: grafana
    restart: always
    image: grafana/grafana:5.1.3
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
    logging: *default-logging
    env_file:
      - .env.infra

  # Головной nginx - проксирует запросы на api и web
  nginx:
    image: just1ce/main_nginx:${RELEASE_VERSION:-latest}
    build:
      context: .
      dockerfile: ./services/nginx/Dockerfile
    restart: always
    ports:
      - 80:80
    volumes:
      - /dev/null:/var/log/nginx/access.log
    logging: *default-logging
  web:
    image: just1ce/nginx_web:${RELEASE_VERSION:-latest}
    restart: always
    build:
      context: .
      dockerfile: ./services/web/Dockerfile
    logging: *default-logging
  api:
    image: just1ce/taskmanager_api:${RELEASE_VERSION:-latest}
    build:
      context: .
      dockerfile: ./services/api/Dockerfile
    restart: always
    logging: *default-logging
    stop_grace_period: 120s
    env_file:
      - .env
      - .env.rabbit
      - .env.mongodb
  cron:
    image: just1ce/taskmanager_cron:${RELEASE_VERSION:-latest}
    restart: always
    build:
      context: .
      dockerfile: ./services/cron/Dockerfile
    env_file:
      - .env

  # Консумеры
  task-consumer:
    shm_size: 1Gb
    mem_limit: 2Gb
    cap_add:
     - SYS_ADMIN
    image: just1ce/taskmanager_consumer:${RELEASE_VERSION:-latest}
    build:
      context: .
      dockerfile: ./services/taskConsumer/Dockerfile
    scale: 5
    logging: *default-logging
    stop_grace_period: 120s
    stop_signal: SIGINT
    restart: always
    env_file:
      - .env
      - .env.rabbit
volumes:
  mongo-data:
  rabbit-data:
  prometheus-data:
  grafana-data:
